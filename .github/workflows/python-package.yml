name: tty-ov

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        lib_packages=$(find ./*/ -name "requirements.txt" -type f)
        first_requirement=$(echo $lib_packages | cut -d " " -f 1)
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ ${#first_requirements} -gt 0 ]; then pip install -r $first_requirements.txt; fi
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest
      run: |
        pytest

    # Add the following steps if you want to publish to PyPI
    - name: Build and publish to PyPI
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        python -m build
        pip install twine
        twine upload dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
